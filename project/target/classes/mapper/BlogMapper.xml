<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.BlogMapper" >
  <resultMap id="BaseResultMap" type="model.Blog" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="describle" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="writer" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOB" type="model.Blog" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="describle" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="writer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="context" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, describle, writer
  </sql>
  <sql id="Blob_Column_List" >
    context
  </sql>
  <select id="selectBlog" parameterType="java.lang.String" resultType="model.Blog">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog WHERE title=#{title}
  </select>
  <select id="selectByWriter" resultMap="ResultMapWithBLOB" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where writer = #{writer,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByTitle" parameterType="java.lang.String" >
    delete from blog
    where title = #{title,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="model.Blog" >
    insert into blog (id, title, describle, 
      writer, context)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{describle,jdbcType=VARCHAR}, 
      #{writer,jdbcType=VARCHAR}, #{context,jdbcType=LONGVARCHAR})
  </insert>
  <select id="selectAllBlog" resultMap="ResultMapWithBLOB">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
  </select>
  <update id="updateByWriter" parameterType="model.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      describle = #{describle,jdbcType=VARCHAR},
      writer = #{writer,jdbcType=VARCHAR},context=#{context,jdbcType=VARCHAR}
    where writer= #{writer,jdbcType=VARCHAR}
  </update>
</mapper>